using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Net;

namespace Schedule_Viewer
{


    public partial class Lookup_Form : Form
    {
        public bool initialized;
        List<DropOption> SemesterList;
        List<DropOption> SessionList;
        List<DropOption> CampusList;
        List<DropOption> DistanceList;
        List<DropOption> CollegeList;
        List<DropOption> DepartmentList;
        List<DropOption> StatusList;
        List<DropOption> Status2List;
        List<DropOption> LevelList;
        List<DropOption> TimeList;
        List<DropOption> UGRList;

        public void InitializeToolTips(){
            System.Windows.Forms.ToolTip DistanceTip = new System.Windows.Forms.ToolTip();
            System.Windows.Forms.ToolTip DistanceComboTip = new System.Windows.Forms.ToolTip();
            DistanceTip.SetToolTip(this.labelDistanceLearning, "Courses offered via alternate teaching methods");
            DistanceComboTip.SetToolTip(this.comboDistanceLearning, "Courses offered via alternate teaching methods");
        }

         public void InitializeLists()
         {
             WebClient webClient = new WebClient();
             const string strUrl = "http://www.registrar.usf.edu/ssearch/staff/staff.php";
             byte[] reqHTML;
             reqHTML = webClient.DownloadData(strUrl);
             UTF8Encoding objUTF8 = new UTF8Encoding();
             String htmlText = objUTF8.GetString(reqHTML);

             Regex Semester = new Regex("(?s)<SELECT NAME=\"P_SEMESTER\">(.+?)</SELECT>");
             Regex SemesterOption = new Regex("(?m)(?i)<OPTION VALUE=\"(\\d+)\"[^>]*>(.+?)(<.+)?\n|\r$");
             Regex Session = new Regex("(?s)<SELECT NAME=\"P_SESSION\">(.+?)</SELECT>");
             Regex SessionOption = new Regex("(?m)<OPTION VALUE=\"([A-z])\">(.+)\n|\r$");
             Regex Campus = new Regex("(?s)<SELECT NAME=\"P_CAMPUS\">(.+?)</SELECT>");
             Regex CampusOption = new Regex("(?m)<OPTION VALUE=\"([0-9A-z])\">(.+)\n|\r$");
             Regex Dist = new Regex("(?s)<SELECT NAME=\"P_DIST\">(.+?)</SELECT>");
             Regex DistOption = new Regex("(?m)<OPTION VALUE=\"(\\d)\">(.+)\n|\r$");
             Regex Col = new Regex("(?s)<SELECT NAME=\"P_COL\">(.+?)</SELECT>");
             Regex ColOption = new Regex("(?m)<OPTION VALUE=\"([A-Z][A-Z])\">(.+)\n|\r$");
             Regex Dept = new Regex("(?s)<SELECT NAME=\"P_DEPT\">(.+?)</SELECT>");
             Regex DeptOption = new Regex("(?m)<OPTION VALUE=\"([A-Z]{3})\">(.+)\n|\r$");
             Regex Status = new Regex("(?s)<SELECT NAME=\"p_status\">(.+?)</SELECT>");
             Regex StatusOption = new Regex("(?m)<OPTION VALUE=\"([A-Z])\">(.+)\n|\r$");
             Regex Ssts_code = new Regex("(?s)<SELECT NAME=\"p_ssts_code\">(.+?)</SELECT>");
             Regex Ssts_codeOption = new Regex("(?m)<OPTION VALUE=\"([A-Z])\">(.+)\n|\r$");
             Regex Crse_levl = new Regex("(?s)<SELECT NAME=\"P_CRSE_LEVL\">(.+?)</SELECT>");
             Regex Crse_levlOption = new Regex("(?m)<OPTION VALUE=\"([A-Z]{2})\">(.+)\n|\r$");
             Regex Time1 = new Regex("(?s)<SELECT NAME=\"P_TIME1\">(.+?)</SELECT>");
             Regex Time1Option = new Regex("(?m)(?i)<OPTION VALUE=(\'[0-9]{4}\')>(.+)</option>$");
             Regex Ugr = new Regex("(?s)<SELECT NAME=\"P_UGR\">(.+?)</SELECT>");
             Regex UgrOption = new Regex("(?m)<OPTION VALUE=\"([0-9A-z]{4})\">(.+)\n|\r$");

             SemesterList = new List<DropOption>();
             foreach (Match m in Semester.Matches(htmlText))
             {
                 foreach (Match n in SemesterOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboTerm.Items.Add(option);
                     SemesterList.Add(option);
                 }
             }

             SessionList = new List<DropOption>();
             foreach (Match m in Session.Matches(htmlText))
             {
                 foreach (Match n in SessionOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboSession.Items.Add(option);
                     SessionList.Add(option);
                 }
             }

             CampusList = new List<DropOption>();
             foreach (Match m in Campus.Matches(htmlText))
             {
                 foreach (Match n in CampusOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboCampus.Items.Add(option);
                     SessionList.Add(option);
                 }
             }

             DistanceList = new List<DropOption>();
             foreach (Match m in Dist.Matches(htmlText))
             {
                 foreach (Match n in DistOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboDistanceLearning.Items.Add(option);
                     DistanceList.Add(option);
                 }
             }

             CollegeList = new List<DropOption>();
             foreach (Match m in Col.Matches(htmlText))
             {
                 foreach (Match n in ColOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboCollege.Items.Add(option);
                     CollegeList.Add(option);
                 }
             }

             DepartmentList = new List<DropOption>();
             foreach (Match m in Dept.Matches(htmlText))
             {
                 foreach (Match n in DeptOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboDepartment.Items.Add(option);
                     DepartmentList.Add(option);
                 }
             }

             StatusList = new List<DropOption>();
             foreach (Match m in Status.Matches(htmlText))
             {
                 foreach (Match n in StatusOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboStatus.Items.Add(option);
                     StatusList.Add(option);
                 }
             }

             Status2List = new List<DropOption>();
             foreach (Match m in Ssts_code.Matches(htmlText))
             {
                 foreach (Match n in Ssts_codeOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboStatus2.Items.Add(option);
                     Status2List.Add(option);
                 }
             }

             LevelList = new List<DropOption>();
             foreach (Match m in Crse_levl.Matches(htmlText))
             {
                 foreach (Match n in Crse_levlOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboLevel.Items.Add(option);
                     LevelList.Add(option);
                 }
             }

             TimeList = new List<DropOption>();
             foreach (Match m in Time1.Matches(htmlText))
             {
                 //MessageBox.Show(m.Groups[0].Value.ToString());
                 foreach (Match n in Time1Option.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboTime.Items.Add(option);
                     TimeList.Add(option);
                 }
             }

             UGRList = new List<DropOption>();
             foreach (Match m in Ugr.Matches(htmlText))
             {
                 foreach (Match n in UgrOption.Matches(m.Groups[1].Value.ToString()))
                 {
                     //MessageBox.Show(n.Groups[1].Value.ToString());
                     DropOption option = new DropOption();
                     option.value = n.Groups[1].Value.ToString();
                     option.description = n.Groups[2].Value.ToString();
                     comboUGR.Items.Add(option);
                     UGRList.Add(option);
                 }
             }

             initialized = true;
         }

        public Lookup_Form()
        {
            InitializeComponent();
            InitializeToolTips();
            if(!initialized)
                InitializeLists();


            //SemesterValues.Add();
        }

        public void clearItems()
        {
            textCRN.Text = String.Empty;
            textHours.Text = String.Empty;
            textInstructor.Text = String.Empty;
            textLabel.Text = String.Empty;
            textNumber.Text = String.Empty;
            textSubject.Text = String.Empty;
            textTitle.Text = String.Empty;

            checkFri1.Checked = false;
            checkFri2.Checked = false;
            checkMon1.Checked = false;
            checkMon2.Checked = false;
            checkSat1.Checked = false;
            checkSat2.Checked = false;
            checkSun1.Checked = false;
            checkSun2.Checked = false;
            checkThurs1.Checked = false;
            checkThurs2.Checked = false;
            checkTues1.Checked = false;
            checkTues2.Checked = false;
            checkWed1.Checked = false;
            checkWed2.Checked = false;

            comboCampus.SelectedIndex = 0;
            comboCollege.SelectedIndex = 0;
            comboDepartment.SelectedIndex = 0;
            comboDistanceLearning.SelectedIndex = 0;
            comboLevel.SelectedIndex = 0;
            comboSession.SelectedIndex = 0;
            comboStatus.SelectedIndex = 0;
            comboStatus2.SelectedIndex = 0;
            comboTerm.SelectedIndex = 0;
            comboTime.SelectedIndex = 0;
            comboUGR.SelectedIndex = 0;
        }


        private void button2_Click(object sender, EventArgs e)
        {
            clearItems();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (textLabel.TextLength == 0)
            {
                MessageBox.Show("A label for this class search is required.");
                return;
            }
            if (comboTerm.SelectedIndex == 0)
            {
                MessageBox.Show("Please select a term for this class search.");
                return;
            }

            Schedule_Search newSchedule = new Schedule_Search(textLabel.Text, textCRN.Text, textSubject.Text,
                textNumber.Text, textHours.Text, textTitle.Text, textInstructor.Text, (DropOption) comboTerm.SelectedItem, 
                (DropOption) comboSession.SelectedItem,(DropOption) comboCampus.SelectedItem, 
                (DropOption) comboDistanceLearning.SelectedItem, (DropOption) comboCollege.SelectedItem, 
                (DropOption) comboDepartment.SelectedItem, (DropOption) comboStatus.SelectedItem, 
                (DropOption) comboStatus2.SelectedItem, (DropOption) comboLevel.SelectedValue, 
                (DropOption) comboTime.SelectedItem, (DropOption) comboUGR.SelectedItem);
            listLabels.Items.Add(newSchedule);
            clearItems();
        }

        private void buttonClear_Click(object sender, EventArgs e)
        {
            if (listLabels.Items.Count != 0)
            {
                listLabels.Items.Clear();
            }
            MessageBox.Show("List cleared");
        }

       /* private void button5_Click(object sender, EventArgs e)
        {

        }*/
    }
}
